	TITLE 'SIEVE.ALC - FIND PRIME NUMBERS USING SIEVE'
*
* AUTHOR. DON HIGGINS.
* DATE.   12/19/86.
* REMARKS. LIST PRIMES ENDING IN 999 UP TO 100,000 (MAXPRIME VALUE)
*          USING 100,000 BYTE TABLE AND SIEVE ROUTINE
*
* 01/16/87 MODIFY TO USE BXLE AND CLCL SCAN FOR NEXT PRIME
* 03/01/87 MODIFY TO USE GMAIN INSTEAD OF DIRECT FQE ACCESS
* 05/20/87 UPDATE TIMINGS FOR PC/370 R2.0
*
SIEVE    SUBENTRY
         WTO   ' '
         WTO   'SIEVE.ALC PROGRAM TO PRINT PRIMES ENDING'
         WTO   'IN 999 UP TO 100,000 USING 100,000 BYTE TABLE'
         WTO   'AND SIEVE ROUTINE. START AND ENDING TIME,'
         WTO   'AND 370 INSTRUCTION COUNT ARE ALSO PRINTED.'
         WTO   'TIME = 176 SECONDS ON  4.77 MHZ  8088 PC.'
         WTO   'TIME =  63 SECONDS ON  6    MHZ 80286 PC/AT.'
         WTO   'TIME =  37 SECONDS ON 10    MHZ 80286 PS/2-50.'
         WTO   'TIME =  31 SECONDS ON 12    MHZ 80286 COMPAQ.'
         WTO   'TIME =  20 SECONDS ON 16    MHZ 80386 COMPAQ.'
         WTO   ' '
	L     ENTRY,=V(PET)
	BALR  LINK,ENTRY     PRINT STARTING TIME
	BAL   LINK,INIT      INIT REGS AND TABLE WITH 2,3 MARKED
	LA    NUMBER,5
	LA    NEXT,999       NEXT TARGET NUMBER WITH 999'S
MAINLOOP EQU   *
	BAL   LINK,MARKDUP   MARK DUPLICATES OF NUMBER
	BAL   LINK,FINDNEXT  FIND NEXT PRIME
	BZ    MAINEOJ        EXIT IF NONE FOUND
	CLR   NUMBER,NEXT
	BL    MAINLOOP       LOOP IF NUMBER < NEXT TARGET
	LA    NEXT,1000(NEXT)
	BNE   CHKEOJ
	BAL   LINK,PRTNUM    PRINT NUMBER IF EQUAL TO TARGET
CHKEOJ   EQU   *
	CL    NUMBER,=A(MAXPRIME)
	BL    MAINLOOP       LOOP IF NUMBER < MAXPRIME
MAINEOJ  EQU   *
	L     ENTRY,=V(PET)
	BALR  LINK,ENTRY    PRINT ENDING TIME
         SUBEXIT
	TITLE 'INIT - INITIALIZE TABLE WITH PRIME INDICATORS'
INIT     EQU   *
         GETMAIN RC,LV=MAXPRIME
	LTR   R0,R0
	BNZ   INITERR
         LR    R2,R1
         LR    R0,R1
         L     R1,=A(MAXPRIME-6)
         MVC   0(6,R2),INITDATA
         LA    R2,6(R2)
         LR    R3,R1
         MVCL  R2,R0             INIT TABLE WITH 2,3 DUP. MARKED
	BR    LINK
INITERR  EQU   *
         WTO   'INSUFFICIENT MEMORY FOR TABLE'
         SUBEXIT
         TITLE 'PRTNUM - PRINT PRIME NUMBER'
PRTNUM   EQU   *
	CVD   NUMBER,PWORK
	MVC   DNUM,DMASK
	ED    DNUM,PWORK+4
         WTO   MF=(E,DMSG)
	BR    LINK
	TITLE 'MARKDUP - MARK DUPLICATES IN TABLE'
MARKDUP  EQU   *
	LA    DUP,0(NUMBER,TABS)
	BXH   DUP,NUMBER,MARKEXIT  EXIT IF DUP > TABE
MARKLOOP EQU   *
	MVI   0(DUP),NOTPRIME
	BXLE  DUP,NUMBER,MARKLOOP  LOOP IF DUP <= TABE
MARKEXIT EQU   *
	BR    LINK
	TITLE 'FINDNEXT - FIND NEXT PRIME IN TABLE'
FINDNEXT EQU   *
	LA    R0,1(NUMBER,TABS)
	LR    R1,TABE
	SR    R1,R0
	BNH   FINDEOF  EOF IF SCAN LENGTH NOT > 0
	LM    R2,R3,=A(0,NOTPRIME*X'1000000')
	CLCL  R0,R2    SCAN FOR NEXT PRIME
	BE    FINDEOF  EOF IF NO PRIME FOUND
	SR    R0,TABS
	LR    NUMBER,R0
	BR    LINK  EXIT WITH NZ FOR PRIME
FINDEOF  EQU   *
	SR    R0,R0 FORCE ZERO CC FOR END OF TABLE
	BR    LINK
	TITLE 'COMMON DATA'
	LTORG
*
*  REGISTERS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
DUP      EQU   4
TABS     EQU   5
NUMBER   EQU   6   R6/R7 USED IN BXLE/BXH
TABE     EQU   7
TWO      EQU   9
NEXT     EQU   10
LINK     EQU   14
ENTRY    EQU   15
*
* DATA
*
MAXPRIME EQU   100000 (100,000=200 SEC, 10,000=20 SEC FOR QUICK TEST)
PRIME    EQU   0
NOTPRIME EQU   1
PWORK    DC    D'0'
DMASK    DC    X'40206B2020206B202020'
DMSG     DC    AL2(DMSG_END-*)
DNUM     DC    CL10' Z,ZZZ,ZZZ'
DMSG_END EQU   *
*
* INITDATA ELIMINATES 2'S AND 3'S FROM TABLE
*
INITDATA DC    AL1(NOTPRIME,PRIME,NOTPRIME,NOTPRIME,NOTPRIME,PRIME)
	END   SIEVE
